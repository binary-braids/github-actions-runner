name: CI

on:
  push:
    branches:
      - "main"
  pull_request:

permissions:
  contents: write
  packages: write
  pull-requests: write

env:
  APP_NAME: github-actions-runner

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout 🔔
        uses: actions/checkout@v4

      - name: Setup Docker Buildx 🖥️
        uses: docker/setup-buildx-action@v3
          
      - name: Build Container 🏗️
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build_and_test

    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      tag: ${{ steps.changelog.outputs.tag }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      version: ${{ steps.changelog.outputs.version }}      

    steps:

      - name: Checkout 🔔
        uses: actions/checkout@v4

      - name: Conventional Changelog Action 📋
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-git-pull: "true"

      - name: Generate Release 📦
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          generate_release_notes: true
          body: ${{ steps.changelog.outputs.clean_changelog }}


  publish:
    name: Publish
    if: github.event_name != 'pull_request' && needs.release.outputs.skipped == 'false'
    runs-on: ubuntu-latest
    needs:
      - release
    steps:

      - name: Checkout 🔔
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry 🔓
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io  
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} 

      - name: Docker Metadata 🏷️
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}          
          tags: |
            latest
            ${{ needs.release.outputs.version}}
            ${{ github.sha }}

      - name: Setup QEMU 🖥️
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx 🖥️
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push 🏗️
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          provenance: false
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy Vulnerability Scanner 🏰
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/${{ env.APP_NAME }}:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          vuln-type: 'os,library'
          severity: "HIGH,CRITICAL"

      - name: Upload Trivy scan results to GitHub Security tab 📮
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
